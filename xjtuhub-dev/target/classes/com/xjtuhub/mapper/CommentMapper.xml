<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xjtuhub.mapper.CommentMapper">

  <resultMap id="BaseResultMap" type="com.xjtuhub.entity.Comment">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="blog_id" jdbcType="INTEGER" property="blogId" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="root_id" jdbcType="INTEGER" property="rootId" />
    <result column="comment_date" jdbcType="TIMESTAMP" property="commentDate" />
    <result column="comment_content" jdbcType="LONGVARCHAR" property="commentContent" />
  </resultMap>

  <resultMap id="AdminCommentMap" type="com.xjtuhub.entity.Comment" autoMapping="true">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="blog_id" jdbcType="INTEGER" property="blogId" />
    <result column="comment_date" jdbcType="TIMESTAMP" property="commentDate" />
    <result column="comment_content" jdbcType="LONGVARCHAR" property="commentContent" />
    <association property="blog" javaType="com.xjtuhub.entity.Blog">
      <result column="title" jdbcType="VARCHAR" property="title" />
    </association>
  </resultMap>

  <resultMap id="BlogResultMap" type="com.xjtuhub.entity.Comment">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="blog_id" jdbcType="INTEGER" property="blogId" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="root_id" jdbcType="INTEGER" property="rootId" />
    <result column="comment_date" jdbcType="TIMESTAMP" property="commentDate" />
    <result column="comment_content" jdbcType="LONGVARCHAR" property="commentContent" />
  </resultMap>

  <sql id="Base_Column_List">
    comment_id, blog_id, role_id, parent_id, comment_date, comment_content, root_id
  </sql>
  
  <sql id="Admin_Comment_List">
    comment_id, comment.blog_id, blog.title, comment.role_id,  comment_date, comment_content
  </sql>
  
<!--  后台查询评论数量-->
  <select id="countComment" resultType="java.lang.Integer">
    select count(*)
    from comment
  </select>

<!-- 分页查询评论 -->
  <select id="selectCommentPage" parameterType="com.xjtuhub.entity.Page" resultMap="AdminCommentMap" >
    select
    <include refid="Admin_Comment_List"></include>
    from comment , blog
    where comment.blog_id = blog.blog_id
    LIMIT #{limitIndex}, #{pageSize}
  </select>
<!--  根据blogId查询评论列表-->
  <select id="selectCommentListByBlog" parameterType="com.xjtuhub.entity.Blog" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"></include>
    from comment
    where comment.blog_id = #{blogId}
    order by comment_date desc
  </select>
<!--根据blogId获取评论数-->
  <select id="countCommentByBlog" parameterType="com.xjtuhub.entity.Blog" resultType="java.lang.Integer">
    select count(*)
    from comment
    where comment.blog_id = #{blogId}
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.xjtuhub.entity.Comment">
    insert into comment (comment_id, blog_id, role_id,
      parent_id, comment_date, comment_content,root_id
      )
    values (#{commentId,jdbcType=INTEGER}, #{blogId,jdbcType=INTEGER}, #{roleId,jdbcType=VARCHAR}, 
      #{parentId,jdbcType=INTEGER}, #{commentDate,jdbcType=TIMESTAMP}, #{commentContent,jdbcType=LONGVARCHAR},#{rootId,jdbcType=INTEGER}
      )
  </insert>

  <insert id="insertSelective" parameterType="com.xjtuhub.entity.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="blogId != null">
        blog_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="parentComment != null">
        parent_comment,
      </if>
      <if test="commentDate != null">
        comment_date,
      </if>
      <if test="commentContent != null">
        comment_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="blogId != null">
        #{blogId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="parentComment != null">
        #{parentComment,jdbcType=INTEGER},
      </if>
      <if test="commentDate != null">
        #{commentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="commentContent != null">
        #{commentContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.xjtuhub.entity.Comment">
    update comment
    <set>
      <if test="blogId != null">
        blog_id = #{blogId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="parentComment != null">
        parent_comment = #{parentComment,jdbcType=INTEGER},
      </if>
      <if test="commentDate != null">
        comment_date = #{commentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="commentContent != null">
        comment_content = #{commentContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.xjtuhub.entity.Comment">
    update comment
    set blog_id = #{blogId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=VARCHAR},
      parent_comment = #{parentComment,jdbcType=INTEGER},
      comment_date = #{commentDate,jdbcType=TIMESTAMP},
      comment_content = #{commentContent,jdbcType=LONGVARCHAR}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>

</mapper>